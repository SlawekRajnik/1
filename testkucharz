#pizza panic

from livewires import games, color
import random

games.init(screen_width = 640, screen_height = 480, fps = 50)

class Pan(games.Sprite):
    """
    Patelnia sterowana przez gracza
    """
    image = games.load_image("patelnia.bmp")

    chefs = 1

    
    def __init__(self):
        super(Pan, self).__init__(image = Pan.image,
                                  x = games.mouse.x,
                                  bottom = games.screen.height)



    def update(self):
        """zmień pozycję na pozycję myszy"""
        self.x = games.mouse.x

        if self.left < 0:
            self.left = 0
        if self.right > games.screen.width:
            self.right = games.screen.width

        self.check_catch()

    def check_catch(self):
        """sprawdź czy nie zostały złapane jakieś pizze"""
        for pizza in self.overlapping_sprites:
            Pizza.end_game(self)
            

            """self.score.value += 10
            self.score.right = games.screen.width - 10
            #if self.score.value > 20:
                #self.bottom = games.screen.height - 50
            #if self.score.value > 40:
                #Pizza.speed = 2
            if self.score.value > 10 and Pan.chefs == 1:
                the_chef2 = Chef()
                games.screen.add(the_chef2)
                Pan.chefs += 1"""
            
            pizza.handle_caught()

    def score(self):
        self.score.value += 1
            
"""
    def difficulty(self):
        if self.score.value > 50:
            pan_level_2()

    def pan_level_2():
        self.destroy
"""        

class Pizza(games.Sprite):
    """Pizza"""
    image = games.load_image("pizza.bmp")
    speed = 1
    global total
    total = 0

    def __init__(self, x, y = -10):
        """inicjalizuj obiekt klasy pizza"""
        super(Pizza, self).__init__(image = Pizza.image,
                                    x = x, y = y,
                                    dy = Pizza.speed)
        
        self.score = games.Text(value = total, size = 25, color = color.black,
                                top = 5, right = games.screen.width - 10)
        games.screen.add(self.score)

    def update(self):
        """srawdź, czy dolny brzeg pizzy dosięgnął dołu ekranu"""
        if self.bottom > games.screen.height:
            Pizza.total += 5
            self.destroy()


    def handle_caught(self):
        """destry self is caught"""
        self.destroy()

    def end_game(self):
        """zakończ grę."""
        end_message = games.Message(value = "Koniec gry",
                                    size = 90,
                                    color = color.red,
                                    x = games.screen.width/2,
                                    y = games.screen.height/2,
                                    lifetime = 5 * games.screen.fps,
                                    after_death = games.screen.quit)
        games.screen.add(end_message)

class Chef(games.Sprite):
    """szef kuchni"""
    image = games.load_image("kucharz.bmp")
    cspeed = 2
    def __init__(self, y = - 80, speed = cspeed, odds_change = 200):
        super(Chef, self).__init__(image = Chef.image,
                                   x = games.screen.width / 2,
                                   y = y,
                                   dx = speed)

        self.odds_change = odds_change
        self.time_til_drop = 0

    def update(self):
        """ustal czy kierunek ruchu musi zostać zmieniony na przeciwny"""
        if self.left < 0 or self.right > games.screen.width:
            self.dx = -self.dx
        elif random.randrange(self.odds_change) == 0:
            self.dx = -self.dx

        self.check_drop()

    def check_drop(self):
        """zmniejsz licznik odliczający czas lub zrzuc pizze i zresetuj odliczanie"""
        if self.time_til_drop > 0:
            self.time_til_drop -= 1
        else:
            new_pizza = Pizza(x = self.x)
            games.screen.add(new_pizza)
            #ustaw margines na mniej więcej 30% wysokości pizzy, niezależnie
            #od prędkości pizzy
            self.time_til_drop = int(new_pizza.height * 1.3 / Pizza.speed) + 3
    
def main():
    """uruchom grę"""
    wall_image = games.load_image("sciana.jpg", transparent = False)
    games.screen.background = wall_image

    the_chef = Chef()
    games.screen.add(the_chef)

    the_pan = Pan()
    games.screen.add(the_pan)

    games.mouse.is_visible = False

    games.screen.event_grab = True
    games.screen.mainloop()

#start!
main()
